import org.gradle.internal.os.OperatingSystem

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id 'java'
    id 'application'
    id 'eclipse'
}

// this is for LWJGL
//project.ext.lwjglVersion = "3.2.1"
project.ext.lwjglVersion = "3.2.2-SNAPSHOT"

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
	break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}

 /////

/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
//apply plugin: 'java-library'
//apply plugin: 'java'
//apply plugin: 'application'
//apply plugin: 'kotlin'
//apply plugin: 'eclipse'

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/java'
   // main.java.srcDirs += 'src/main/myJava'
}


/*
distributions {
    main {
        contents {
            //from { 'res' }
            from '.'
        	include 'conf/*'
        }
    }
}
*/


distZip {
    into(project.name) {
        from '.'
        include 'res/*'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    // for serial communication
	implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
	
	// uses the kotlin-graphics/imgui library, but exclude vulkan dependencies
	implementation ('com.github.kotlin-graphics:imgui:v1.68.01-00') {
		exclude group: 'com.github.kotlin-graphics', module:'vkk'
	}
	
	
	// 2019-04-21: theese are required since kotlin-graphics/imgui does not use the following depencendies
    // with the "api" keyword, and does thus not export the dependencies for use with this application. 
    // That is why the following depencendies are needed directly 
    
    implementation ('com.github.kotlin-graphics:uno-sdk:60edf33067835253aa30ac79bd5129363fee953f') {
    	exclude group: 'org.lwjgl', module: 'lwjgl-assimp'
    	exclude group: 'org.lwjgl', module: 'lwjgl-openal'
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    
    implementation "org.lwjgl:lwjgl:$lwjglVersion"
	//implementation "org.lwjgl:lwjgl-assimp:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	//implementation "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
	//implementation "org.lwjgl:lwjgl-openal:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	//implementation "org.lwjgl:lwjgl-stb:$lwjglVersion"
	
	// Look up which modules and versions of LWJGL are required and add setup the approriate natives.
	configurations.implementation.dependencies.forEach {
		if (it.group == "org.lwjgl") {
        	//println "org.lwjgl:${it.name}:${it.version}:${lwjglNatives}"
            runtimeOnly "org.lwjgl:${it.name}:${it.version}:${lwjglNatives}"
        }
	}
	
	
	
}

application {
	//applicationDefaultJvmArgs = ['-Dorg.lwjgl.util.Debug=true']
}



mainClassName = 'com.fmsz.gridmapgl.core.Main2'  // Main class with main method
