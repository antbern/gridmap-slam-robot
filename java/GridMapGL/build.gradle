import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.4.30"
    id 'application'
    id 'eclipse'
}

// this is for LWJGL (OBS: update this to the same one as kotlin-imgui uses)
project.ext.lwjglVersion = "3.2.3"

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
	break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/java'
}

distZip {
    into(project.name) {
        from '.'
        include 'res/*'
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    mavenCentral()
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://jitpack.io' }
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib"

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
    // for serial communication
	implementation 'com.fazecast:jSerialComm:[2.0.0,3.0.0)'
	
	// uses the kotlin-graphics/imgui library, but exclude vulkan dependencies
	["gl", "glfw", "core"].each {
        implementation "com.github.kotlin-graphics.imgui:$it:v1.79"
    }
    	
	// 2019-04-21/2019-11-24/2020-03-30: theese are required since kotlin-graphics/imgui does not use the following depencendies
    // with the "api" keyword, and does thus not export the dependencies for use with this application. 
    // That is why the following depencendies are needed directly 
    // OBS: Make sure the hashes are the same as the ones used in imgui release specified above)
    /*implementation 'com.github.kotlin-graphics:gln:1d4d577573c83aeec84a43a217db47b789b78f0d'
    implementation 'com.github.kotlin-graphics.glm:glm:6048c31425ae6110258e4b42165f1e636f8b5603'
    implementation ('com.github.kotlin-graphics:uno-sdk:cb9073be566b5ca09e3a6d2a8edfb661a721c751') {
    	exclude group: 'org.lwjgl'
    }*/
    
    
    implementation 'com.github.kotlin-graphics:gln:3e59f9ea'
    implementation 'com.github.kotlin-graphics:glm:a4185eec'
    implementation ('com.github.kotlin-graphics:uno-sdk:2b06aa78') {
    	exclude group: 'org.lwjgl'
    }
        
    implementation "org.lwjgl:lwjgl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-remotery:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-jawt:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-bgfx:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-openal:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengl:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-opengles:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-vulkan:$lwjglVersion"
	implementation "org.lwjgl:lwjgl-stb:$lwjglVersion"
	
	// Look up which modules and versions of LWJGL are required and add setup the approriate natives.
	configurations.implementation.dependencies.forEach {
		if (it.group == "org.lwjgl" && it.name != "lwjgl-jawt" && it.name != "lwjgl-vulkan") {
            runtimeOnly "org.lwjgl:${it.name}:${it.version}:${lwjglNatives}"
        }
	}
}

application {
	//applicationDefaultJvmArgs = ['-Dorg.lwjgl.util.Debug=true']
}


mainClassName = 'com.fmsz.gridmapgl.core.Main2'  // Main class with main method
